{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,WAAYC,SAASC,cAAc,uBACnCC,UAAWF,SAASC,cAAc,sBAClCE,OAAQH,SAASC,cAAc,wBAC/BG,iBAAkBJ,SAASC,cAAc,yBACzCI,KAAML,SAASC,cAAc,UAsC/B,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA1CbV,EAAKO,KAAKU,iBAAiB,UAE3B,SAAiCC,GAC/BA,EAAMC,iBAEN,IAAIlB,EAAamB,SAASpB,EAAKC,WAAWoB,OAC1C,MAAMC,EAAOF,SAASpB,EAAKI,UAAUiB,OAC/BhB,EAASe,SAASpB,EAAKK,OAAOgB,OAEpC,IAAK,IAAIE,EAAW,EAAGA,GAAYlB,EAAQkB,GAAY,EAErDf,EAAce,EAAUtB,GACrBuB,MAAK,EAACf,SAAEA,EAAQC,MAAEA,MAEjBe,EAAA3B,GAAS4B,OAAOC,QAAQ,qBAAqBlB,QAAeC,MAC1D,CACEkB,MAAO,QACPC,SAAU,QACZ,IAEHC,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAElBe,EAAA3B,GAAS4B,OAAOK,QAAQ,oBAAoBtB,QAAeC,MAAW,CACpEkB,MAAO,QACPC,SAAU,QACZ,IAGJ5B,GAAcqB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  firstDelay: document.querySelector('input[name=\"delay\"]'),\n  stepDelay: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  btnCreatePromise: document.querySelector('button[type=\"submit\"]'),\n  form: document.querySelector('.form'),\n}\n\n\n\nrefs.form.addEventListener('submit', onBtnCreatePromiseClick);\n\nfunction onBtnCreatePromiseClick(event) {\n  event.preventDefault();\n\n  let firstDelay = parseInt(refs.firstDelay.value);\n  const step = parseInt(refs.stepDelay.value);\n  const amount = parseInt(refs.amount.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n   \n    createPromise(position, firstDelay)\n      .then(({ position, delay }) => {\n     \n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`,\n          {\n            width: '400px',\n            fontSize: '20px', \n        });\n    })\n      .catch(({ position, delay }) => {\n        \n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`, {\n          width: '400px',\n          fontSize: '20px',\n      });\n      });\n    \n    firstDelay += step;\n  }\n\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  })\n \n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","firstDelay","document","querySelector","stepDelay","amount","btnCreatePromise","form","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","parseInt","value","step","position1","then","$parcel$interopDefault","Notify","success","width","fontSize","catch","failure"],"version":3,"file":"03-promises.64cac9eb.js.map"}