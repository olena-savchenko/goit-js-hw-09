{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,WAAYC,SAASC,cAAc,uBACnCC,UAAWF,SAASC,cAAc,sBAClCE,OAAQH,SAASC,cAAc,wBAC/BG,iBAAkBJ,SAASC,cAAc,yBACzCI,KAAML,SAASC,cAAc,UAsC/B,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IA1CPV,EAAKO,KAAKU,iBAAiB,UAE3B,SAAiCC,GAC/BA,EAAMC,iBAMN,IAJA,IAAMlB,EAAamB,SAASpB,EAAKC,WAAWoB,OACtCC,EAAOF,SAASpB,EAAKI,UAAUiB,OAC/BhB,EAASe,SAASpB,EAAKK,OAAOgB,OAE3BE,EAAW,EAAGA,GAAYlB,EAAQkB,GAAY,EAErDf,EAAce,EAAUtB,GACrBuB,MAAK,SAAAC,G,IAAGhB,EAAQgB,EAARhB,SAAUC,EAAKe,EAALf,MAEjBgB,EAAA5B,GAAS6B,OAAOC,QAAQ,qBAAoCC,OAAfpB,EAAS,QAAYoB,OAANnB,EAAM,MAChE,CACEoB,MAAO,QACPC,SAAU,Q,IAGfC,OAAM,SAAAP,G,IAAGhB,EAAQgB,EAARhB,SAAUC,EAAKe,EAALf,MAElBgB,EAAA5B,GAAS6B,OAAOM,QAAQ,oBAAmCJ,OAAfpB,EAAS,QAAYoB,OAANnB,EAAM,MAAK,CACpEoB,MAAO,QACPC,SAAU,Q,IAIhB9B,GAAcqB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  firstDelay: document.querySelector('input[name=\"delay\"]'),\n  stepDelay: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  btnCreatePromise: document.querySelector('button[type=\"submit\"]'),\n  form: document.querySelector('.form'),\n}\n\n\n\nrefs.form.addEventListener('submit', onBtnCreatePromiseClick);\n\nfunction onBtnCreatePromiseClick(event) {\n  event.preventDefault();\n\n  const firstDelay = parseInt(refs.firstDelay.value);\n  const step = parseInt(refs.stepDelay.value);\n  const amount = parseInt(refs.amount.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n   \n    createPromise(position, firstDelay)\n      .then(({ position, delay }) => {\n     \n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`,\n          {\n            width: '400px',\n            fontSize: '20px', \n        });\n    })\n      .catch(({ position, delay }) => {\n        \n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`, {\n          width: '400px',\n          fontSize: '20px',\n      });\n      });\n    \n    firstDelay += step;\n  }\n\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  })\n \n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","firstDelay","document","querySelector","stepDelay","amount","btnCreatePromise","form","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","parseInt","value","step","position1","then","param","$parcel$interopDefault","Notify","success","concat","width","fontSize","catch","failure"],"version":3,"file":"03-promises.54640665.js.map"}